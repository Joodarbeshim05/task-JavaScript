// 1.Добавление и удаление элементов в конце массива:
// Создайте массив с несколькими элементами. Используйте push для добавления
// нового элемента в конец массива, а затем pop, чтобы удалить последний
// элемент. Выведите массив после каждой операции.

// let arr = [11, 22, 33, 44, 55, 66, 77, 88, 99];
// arr.push(100);
// console.log(arr);
// arr.pop();
// console.log(arr);

// 2.Добавление и удаление элементов в начале массива:
// Создайте массив с несколькими элементами. Используйте unshift для
// добавления нового элемента в начало массива, а затем shift, чтобы удалить
// первый элемент. Выведите массив после каждой операции.

// let arr = [11, 22, 33, 44, 55, 66, 77, 88, 99];
// arr.unshift(100);
// console.log(arr);
// arr.shift();
// console.log(arr);

// 3.Разделение массива:
// Создайте массив с несколькими элементами. Используйте pop для удаления
// последнего элемента, а затем shift, чтобы удалить первый элемент, и
// выведите новый массив.

// let arr = [11, 22, 33, 44, 55, 66, 77, 88, 99];
// arr.shift();
// console.log(arr);
// arr.pop();
// console.log(arr);

// 4.Создать массив
// let fruits = ['яблоко', 'апельсин', 'груша'];
// Добавить элемент в конец массива; // ['яблоко', 'апельсин', 'груша', 'банан']

// let fruits = ["яблоко", "апельсин", "груша"];
// fruits.push("банан");
// console.log(fruits);

// 5.Удалить последний элемент массива
// ['яблоко', 'апельсин', 'груша']

// let fruits = ["яблоко", "апельсин", "груша"];
// console.log(fruits);
// fruits.pop();
// console.log(fruits);

// 6.Объединить два массива с помощью push
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// [1, 2, 3, 4, 5, 6]

// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];

// console.log(arr1);

// 7.let numbers = [1, 2, 3, 4, 5];
// Удалить последний элемент и добавить новый элемент в начало массива
// [0, 1, 2, 3, 4]

// let numbers = [1, 2, 3, 4, 5];
// numbers.unshift(0);
// numbers.pop();
// console.log(numbers);

// 8.let queue = [];
// Добавить элементы в очередь
// ['третий', 'второй', 'первый']

// let queue = [];
// queue.push("третий", "второй", "первый");
// console.log(queue);

// 9.Удалить элемент из очереди (первый добавленный)
// ['третий', 'второй']

// 10.let numbers = [10, 20, 30, 40, 50];
// Удалить один элемент, начиная с индекса 2
// [10, 20, 40, 50]
// Удалить три элемента, начиная с индекса 1
// [10]

// let numbers = [10, 20, 30, 40, 50];
// numbers.splice(1, 1);
// console.log(numbers);
// numbers.splice(1, 3);
// console.log(numbers);

// 11.let colors = ["красный", "зеленый", "синий"];
// Вставить 'желтый' на место индекса 1, удалить 0 элементов
// ['красный', 'желтый', 'зеленый', 'синий']

// let colors = ["красный", "зеленый", "синий"];
// colors.splice(1, 0, "желтый");
// console.log(colors);

// 12.let colors = ["красный", "зеленый", "синий"];
// Заменить 'зеленый' на 'фиолетовый'
// ['красный', 'желтый', 'фиолетовый', 'синий']

// let colors = ["красный", "зеленый", "синий"];
// colors.splice(1, 1, "фиолетовый");
// console.log(colors);

// 13.let cars = ["Мерседес", "БМВ", "Ауди"];
// Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']

// let cars = ["Мерседес", "БМВ", "Ауди"];
// cars.splice(1, 0, "Фольксваген", "Тойота");
// console.log(cars);

// 14.let colors = ["красный", "желтый", "синий"];
// Заменить один элемент на другой, начиная с индекса 0
// ['фиолетовый', 'желтый', 'синий']

// let colors = ["красный", "желтый", "синий"];
// colors.splice(0, 1, "фиолетовый");
// console.log(colors);

// 15.let fruits = ["яблоко", "груша", "апельсин", "банан"];
// Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// ['груша', 'апельсин']

// let fruits = ["яблоко", "груша", "апельсин", "банан"];
// fruits.splice(0, 1);
// fruits.splice(2, 1);
// console.log(fruits);

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|||>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \\

// Во всех задачах используйте только методы map, filter.
//
// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.

// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию, изменяющую букву а в каждом имени на я и выведите в консоль.

// const arrNames = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//   arrNames.map((el) => {
//     return el.replaceAll("а", "я");
//   })
// );

// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию, которая выводит только те имена, где есть буква к и выведите в консоль.

// let arrNames = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//   arrNames.filter((el) => {
//     return el.includes("к");
//   })
// );

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.

// const num = [4, 54, 49];
// console.log(
//   num.map((el) => {
//     return el ** 2;
//   })
// );

// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.

// const num = [3134, 4, -143, -245, -214];
// console.log(
//   num.filter((el) => {
//     return el < 0;
//   })
// );

// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.

// const num = [3, 51, 30, 54, 60];
// console.log(
//   num.filter((el) => {
//     return el % 2 === 0;
//   })
// );

// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те строки, длина которых больше 5-ти символов.

// const arrNames = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//   arrNames.filter((el) => {
//     return el.length >= ;
//   })
// );

// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество отрицательных чисел в этом массиве.
// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа. Затем извлеките квадратный корень из этих чисел, если эти числа больше 30.
// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию, которая очищает массив от ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.
// console.log(nums.length(1));

// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат'].

// const arrNames = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//   arrNames.map((el) => {
//     if (el) {

//       return;
//     } else {

//     }
//   })
// );

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|||>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \\

// 1. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]

// const arrNames = ["асКар", "бЯяман", "калМмамат"];
// console.log(
//   arrNames.map((el) => {
//     return el[0].toUpperCase() + el.slice(1).toLowerCase();
//   })
// );

// 2. Преобразование данных
// Создайте массив чисел и используйте метод map(), чтобы преобразовать числа в строковый формат с добавлением символа "$" в начале каждой строки.
// let prices = [10, 20, 30, 40, 50];

// const arrNums = [10, 20, 30, 40, 50];
// console.log(
//   arrNums.map((el) => {
//     return "$" + el;
//   })
// );

// 3. Использование map() для удвоения значений в массиве:
// let numbers = [1, 2, 3, 4, 5];
// [2, 4, 6, 8, 10]

// const arrNums = [1, 2, 3, 4, 5];
// console.log(
//   arrNums.map((el) => {
//     return el + el;
//   })
// );

// 4. Использование filter() для фильтрации строк по содержанию подстроки:
// let words = ['apple', 'banana', 'grape', 'apricot', 'orange'];
// 'ap'
// ['apple', 'apricot']

// const arrFukts = ["apple", "banana", "grape", "apricot", "orange"];
// console.log(
//   arrFukts.filter((el) => {
//     return el.includes("ap");
//   })
// );

// 5. Использование map() для создания нового массива с квадратами чисел:
// let numbers = [1, 2, 3, 4, 5];
// [1, 4, 9, 16, 25]

// const arrNums = [1, 2, 3, 4, 5];
// console.log(
//   arrNums.map((el) => {
//     return el * el;
//   })
// );

// 6. Использование map() для добавления индексов к элементам массива:
// let colors = ['красный', 'зеленый', 'синий'];
// ['1. красный', '2. зеленый', '3. синий']

// const colors = ["красный", "зеленый", "синий"];
// console.log(
//   colors.map((el) => {
//     return el;
//   })
// );

// some \\
// find \\

// 1. Проверка наличия элементов, удовлетворяющих условию
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент, удовлетворяющий определенному условию.
// let numbers = [10, 5, 8, 22, 3];

// const numbers = [10, 5, 8, 22, 3];
// console.log(numbers.some((el) => {
//     return el
// }));

// 2. Проверка наличия элемента больше определенного порога
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент больше 15
// let numbers = [10, 5, 8, 22, 3];

// const numbers = [10, 5, 8, 22, 3];
// console.log(
//   numbers.some((el) => {
//     return el > 15;
//   })
// );

// 3. Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли в массиве строк хотя бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];

// const words = ["apple", "banana", "cherry", "date"];
// console.log(
//   words.some((el) => {
//     return el.includes("a");
//   })
// );

// 4. Поиск элемента по индексу
// Создайте массив чисел и используйте метод find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];

// const numbers = [10, 20, 30, 40, 50];
// console.log(
//   numbers.find((el) => {
//     return el[2];
//   })
// );

// 5. Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти первую строку, которая начинается с "b" определенной буквы.
// let words = ["apple", "banana", "cherry", "date"];

// 6. Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(), чтобы найти первый элемент, который больше  25 определенного порогового значения.
// let numbers = [10, 20, 30, 40, 50];

// let arrName = [
//   "Uchkunbek",
//   "Idris",
//   "Aiyke",
//   "Jasmin",
//   "Ulan",
//   "Joodar",
//   "Zarina",
// ];
// console.log(
//   arrName.map((el, idx) => {
//     if (idx % 2 !== 0) {
//       return el;
//     } else {
//       return el.toUpperCase();
//     }
//   })
// );

// Дан массив строк с названиями городов. Напиши функцию, которая принимает этот массив и возвращает новый массив, содержащий только те города, которые начинаются с буквы "А" (регистр не имеет значения), но с названием в верхнем регистре.
// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"];
// Ожидаемый результат: ["АЛМАТЫ", "АСТАНА", "АСТРАХАНЬ"]

// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"];
// console.log(
//   cities.filter((el, idx) => {
//     return;
//   })
// );

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|||>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \\

// 1. Найти первый элемент в массиве, который больше 10.

// const arr = [5, 10, 15, 20, 25, 30];
// console.log(
//   arr.find((el) => {
//     return el > 10;
//   })
// );

// 2. Проверить, все ли элементы массива являются положительными числами.

// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// console.log(
//   arr.every((el) => {
//     return el > 0;
//   })
// );

// 3. Проверить, есть ли в массиве хотя бы один элемент, равный 0.

// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];
// console.log(
//   arr.some((el) => {
//     return el === 0;
//   })
// );

// 4. Найти первое четное число в массиве.

// const arr = [13, 23, 34, 45, 56, 67, 78, 89, 90];
// console.log(
//   arr.find((el) => {
//     return el % 2 === 0;
//   })
// );

// 5. Проверить, все ли строки в массиве содержат более 5 символов.

// const arr = ["JavaScript", "Python", "Ruby", "Kotlin", "Assembler"];
// console.log(
//   arr.every((el) => {
//     return el.length > 5;
//   })
// );

// 6. Проверить, есть ли в массиве хотя бы одно отрицательное число.

// const arr = [12, 23, 34, 45, 56, 67, 78, 89, -90];
// console.log(
//   arr.find((el) => {
//     return el < 0;
//   })
// );

// 7. Найти первую строку в массиве, которая начинается с буквы "A".
// 8. Проверить, все ли элементы массива являются четными числами.
// 10. Найти первый элемент массива, который делится на 3 без остатка.
// 11. Проверить, все ли элементы массива больше 0.
// 13. Найти первый элемент массива, который меньше 5.
// 15. Проверить, есть ли в массиве хотя бы один элемент, равный "apple".
// 16. Найти первый элемент массива, который содержит подстроку "JavaScript".
// 17. Проверить, все ли элементы массива положительны.
// 18. Проверить, есть ли в массиве хотя бы одна строка, длина которой больше 10 символов.
// 19. Найти первый элемент массива, который является нечетным числом.
// 20. Проверить, все ли элементы массива являются отрицательными числами.
// 21. Проверить, есть ли в массиве хотя бы один элемент, равный "banana".
// 23. Проверить, все ли элементы массива являются кратными 4 числами.
// 25. Найти первый элемент массива, который больше 100.
// 27. Проверить, есть ли в массиве хотя бы одна строка, заканчивающаяся на "tion".

// split
// join

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|||>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \\

// Во всех задачах используйте только методы map, reduce.

// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.

// let arrNum = [5, 15, 315, 2, 13, 20, 9];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return acc + el;
//   }, 0)
// );

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.

// let arrNum = [5, 12, 314, 2, 13, 20, 9];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return el % 2 === 0 ? acc + el : acc;
//   }, 0)
// );

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.

// let arrNum = [5, 15, 315, 2, 13, 20, 9];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return el > 10 ? acc + el : acc;
//   }, 0)
// );

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше  10.

// let arrNum = [3, 13, 54, 15, 335, 39];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return el > 10 ? acc - el : acc;
//   }, 0)
// );

// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.

// let arrNum = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return el.length ? acc + el : acc;
//   }).length
// );

// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.

// let arrNums = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//   arrNums.map((el) => {
//     return el.toUpperCase();
//   })
// );

// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.

// let arrNums = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//   arrNums.map((el, idx) => {
//     if (idx % 2 !== 1) {
//       return el.toUpperCase();
//     } else {
//       return el.toLowerCase();
//     }
//   })
// );

// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму всех отрицательных чисел, которые больше 10.

// let arrNum = [5, -54, 13, -7, 45, -15, -34];
// console.log(
//   arrNum.reduce((acc, el) => {
//     return el > -10 ? acc + el : acc;
//   })
// );

// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары. Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.

// let arrNums = [1, 65, 13, 30, 100];
// console.log(
//   arrNums.map((el) => {
//     return el * 86;
//   })
// );

// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.

// let arrNum = ["Оскар", "Баяман", "Калмамат"];
// console.log(
//   arrNum.map((el, idx) => {
//     return idx + 1 + ". " + el;
//   })
// );

// 1.Преобразование чисел в строку
// Создайте массив чисел и используйте метод join() для преобразования их в строку, разделенную запятой.
// let numbers = [1, 2, 3, 4, 5];

// let arrNum = [1, 2, 3, 4, 5];
// console.log(arrNum.join(","));

// 2. Объединение пути к файлу
// Создайте массив строк, представляющих части пути к файлу, и используйте метод join() для объединения их в один путь.
// let pathParts = ["folder", "subfolder", "file.txt"];
// console.log(pathParts.join("/"));

// 3. Разделение строки по пробелам
// Разделите строку на массив слов, используя пробел в качестве разделителя.
// let sentence = "Это пример разделения строки на слова";
// console.log(sentence.split(" "));

// 4. Разделение строки по запятой
// Разделите строку, содержащую перечень элементов, разделенных запятыми, на массив элементов.
// let items = "apple, banana, cherry, date";
// console.log(items.split(" ,"));

// Во всех задачах используйте только методы split()

// 1. Разделение строки на слова
// Напишите функцию splitWords(str), которая принимает строку str и возвращает массив слов. Считайте, что слова разделены пробелами.
// // Ожидаемый результат: ["JavaScript", "is", "awesome"]

// 2. Разделение строки на символы
// Напишите функцию splitCharacters(str), которая принимает строку str и возвращает массив всех символов строки.
// // Ожидаемый результат: ["h", "e", "l", "l", "o"]

// 3. Сумма чисел из строки
// Напишите функцию sumNumbers(str), которая принимает строку из чисел, разделенных запятыми, и возвращает их сумму.
// sumNumbers("5,10,15,20");
// // Ожидаемый результат: 50

// 4. Обратный порядок слов
// Напишите функцию reverseWords(str), которая принимает строку str и возвращает новую строку, где слова идут в обратном порядке.
// reverseWords("Hello world from JavaScript");
// // Ожидаемый результат: "JavaScript from world Hello"

// 5. Получение расширения файла
// Напишите функцию getFileExtension(filename), которая принимает строку с именем файла и возвращает его расширение. Считайте, что файл всегда имеет расширение.
// getFileExtension("document.pdf");
// // Ожидаемый результат: "pdf"

// Задача 6: Первые буквы слов

// Напишите функцию getFirstLetters(str), которая принимает строку, состоящую из нескольких слов, и возвращает строку, состоящую из первых букв каждого слова.
// Пример:
// getFirstLetters("Hello amazing world");
// // Ожидаемый результат: "Haw"

// function task1(str) {}
// console.log(task1("Hello amazing world"));

// Задача 7: Подсчет слов в строке
// Напишите функцию countWords(str), которая принимает строку и возвращает количество слов в ней. Считайте, что слова разделены пробелами и других разделителей нет.
// Пример:
// countWords("JavaScript is fun to learn");
// // Ожидаемый результат: 5

// 2. Найти минимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит минимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6];
// console.log(
//   arr.reduce((acc, el) => {
//     return el < acc ? el : acc;
//   }, 0)
// );

// 3. Найти максимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит максимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6];
// console.log(
//   arr.reduce((acc, el) => {
//     return acc > el ? acc : el;
//   }, 0)
// );

// 4. Умножение всех чисел в массиве
// Дан массив чисел. Напишите функцию, которая возвращает произведение всех чисел, используя только reduce.
// const arr = [1, 2, 3, 4];
// console.log(
//   arr.reduce((acc, el) => {
//     return acc * el;
//   })
// );

// 5. Подсчет количества положительных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество положительных чисел в массиве, используя только reduce.
// const arr = [1, -2, 3, -4, 5];

// 6. Подсчет количества отрицательных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество отрицательных чисел в массиве, используя только reduce.
// const arr = [1, -2, 3, -4, 5];

// 7. Подсчет общего количества символов в массиве строк
// Дан массив строк. Напишите функцию, которая возвращает общее количество символов во всех строках, используя только reduce.
// const words = ["apple", "banana", "cherry"];
// console.log(
//   words.reduce((acc, el) => {
//     return acc + el.length;
//   }, 0)
// );

// 8. Преобразование массива чисел в массив их квадратов
// Дан массив чисел. Напишите функцию, которая возвращает массив чисел, являющихся квадратами чисел из исходного массива, используя только reduce.
// const arr = [1, 2, 3, 4];
// console.log(
//   arr.reduce((acc, el) => {
//     return acc ** el;
//   }, 0)
// );

// 9. Преобразование массива строк в массив их длин
// Дан массив строк. Напишите функцию, которая возвращает массив длин этих строк, используя только reduce.
// const words = ["apple", "banana", "cherry"];
// console.log(
//   words.reduce((acc, el) => {
//     return el + acc;
//   })
// );

// 10. Получить все уникальные элементы из массива
// Дан массив чисел. Напишите функцию, которая возвращает массив уникальных элементов, используя только reduce.
// const arr = [1, 2, 2, 3, 4, 4, 5];

//?
// Дан массив строк с названиями городов. Напиши функцию, которая принимает этот массив и возвращает новый массив, содержащий только те города, которые начинаются с буквы "А" (регистр не имеет значения), но с названием в верхнем регистре.
// Ожидаемый результат: ["АЛМАТЫ", "АСТАНА", "АСТРАХАНЬ"]
// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"];
// console.log(
//   cities.reduce((acc, el) => {
//     return acc + el;
//   })
// );

// function polindrom(str) {
//   return str.split();
// }
// console.log(polindrom("hello"));

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|||>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \\

// 1. Преобразование цен в другую валюту
// Описание: Преобразуйте массив цен в долларах в рубли (1 доллар = 100 рублей).

// const pricesInUSD = [10, 15, 20, 25];
// console.log(
//   pricesInUSD.map((el) => {
//     return el * 100;
//   })
// );

// console.log(pricesInRUB); // [1000, 1500, 2000, 2500]

// 2. Отфильтровать совершеннолетних
// Описание: Верните массив только тех, кто старше 18 лет.
// const ages = [12, 17, 18, 21, 34, 15, 19];
// console.log(adults); // [18, 21, 34, 19]
// const ages = [12, 17, 18, 21, 34, 15, 19];
// console.log(
//   ages.filter((el) => {
//     return el >= 18;
//   })
// );

// 3. Получение имен пользователей
// Описание: Создайте массив только из имен.
// const users = [
//   { name: "Alice", age: 25 },
//   { name: "Bob", age: 30 },
//   { name: "Charlie", age: 35 },
// ];
// console.log(
//   users.map((el) => {
//     return (el = el.name);
//   })
// );
// console.log(userNames); // ['Alice', 'Bob', 'Charlie']

// 4. Удаление товаров дешевле 100 рублей
// Описание: Удалите товары, у которых цена ниже 100 рублей.
// const products = [
//   { name: "Notebook", price: 50 },
//   { name: "Pen", price: 10 },
//   { name: "Backpack", price: 300 },
//   { name: "Eraser", price: 5 },
// ];
// console.log(
//   products.filter((el) => {
//     return el.price > 100;
//   })
// );
// console.log(expensiveProducts); // [{ name: 'Backpack', price: 300 }]

// 5. Добавить скидку к товарам
// Описание: Примените скидку 20% ко всем товарам.
// const products = [
//   { name: 'Shirt', price: 200 },
//   { name: 'Pants', price: 400 },
//   { name: 'Hat', price: 100 }
// ];
// console.log(products.map((el) => {

// }));

// console.log(discountedProducts);
// // [
// //   { name: 'Shirt', price: 160 },
// //   { name: 'Pants', price: 320 },
// //   { name: 'Hat', price: 80 }
// // ]

// 6. Подсчет общего количества товаров
// Описание: Подсчитайте общее количество всех товаров на складе.
// const inventory = [
//   { name: "Shirt", quantity: 10 },
//   { name: "Pants", quantity: 5 },
//   { name: "Hat", quantity: 8 },
// ];
// console.log(
//   inventory.reduce((acc, el) => {
//     return el.quantity + acc;
//   }, 0)
// );

// console.log(totalQuantity); // 23

// 7. Проверка всех пользователей на возраст
// Описание: Убедитесь, что все пользователи старше 18 лет.
// const users = [
//   { name: "Alice", age: 25 },
//   { name: "Bob", age: 30 },
//   { name: "Charlie", age: 35 },
// ];
// console.log(
//   users.every((el) => {
//     return el.age > 18;
//   })
// );

// console.log(allAdults); // true

// 8. Преобразование массива в строку
// Описание: Преобразуйте массив имен в строку, разделенную запятыми.
// const names = ["Alice", "Bob", "Charlie"];
// console.log(names.join(", "));
// console.log(namesString); // 'Alice, Bob, Charlie'

// 9. Разделение строки на массив
// Описание: Преобразуйте строку с именами в массив.
// const namesString = "Alice, Bob, Charlie";
// console.log(namesString.split(" "));

// console.log(namesArray); // ['Alice', 'Bob', 'Charlie']

// 10. Найти самый дешевый продукт
// Описание: Определите продукт с минимальной ценой.
// const products = [
//   { name: "Notebook", price: 50 },
//   { name: "Pen", price: 10 },
//   { name: "Backpack", price: 300 },
//   { name: "Eraser", price: 5 },
// ];

// console.log(
//   products.find((el) => {
//     return el < el.price;
//   })
// );

// console.log(cheapestProduct); // { name: 'Eraser', price: 5 }

// 11. Фильтр слов по длине
// Описание: Отфильтруйте слова длиной более 3 символов.
// const words = ['cat', 'dog', 'elephant', 'ant'];
// console.log(longWords); // ['elephant']

// 12. Удвоение чисел
// Описание: Умножьте каждое число на 2.
// const numbers = [1, 2, 3, 4, 5];
// console.log(doubledNumbers); // [2, 4, 6, 8, 10]

// 13. Проверка наличия отрицательных чисел
// Описание: Проверьте, есть ли в массиве отрицательные числа.
// const numbers = [1, 2, -3, 4, 5];
// console.log(hasNegative); // true

// 14. Подсчет слов в предложении
// Описание: Подсчитайте количество слов в строке.
// const sentence = 'This is a simple sentence';
// console.log(wordCount); // 5

// 15. Найти сумму всех чисел
// Описание: Подсчитайте сумму чисел в массиве.
// const numbers = [10, 20, 30, 40, 50];
// console.log(totalSum); // 150

// 16. Фильтрация пользователей по имени
// Описание: Оставьте в массиве только пользователей с именем, содержащим букву “a”.
// const users = [
//   { name: 'Alice', age: 25 },
//   { name: 'Bob', age: 30 },
//   { name: 'Charlie', age: 35 },
//   { name: 'Eve', age: 20 }
// ];
// console.log(usersWithA);
// // [
// //   { name: 'Alice', age: 25 },
// //   { name: 'Charlie', age: 35 }
// // ]

// 17. Проверка, есть ли товар с рейтингом 5
// Описание: Проверьте, есть ли хотя бы один товар с рейтингом 5.
// const products = [
//   { name: 'Laptop', rating: 4.5 },
//   { name: 'Mouse', rating: 3.8 },
//   { name: 'Keyboard', rating: 4.2 },
//   { name: 'Monitor', rating: 5 }
// ];
// console.log(hasTopRatedProduct); // true

// 18. Найти самое длинное слово
// Описание: Определите самое длинное слово в массиве.
// const words = ['cat', 'elephant', 'dog', 'giraffe'];
// console.log(longestWord); // 'elephant'

// 19. Преобразование массива чисел в строку
// Описание: Преобразуйте массив чисел в строку, где числа разделены дефисами.
// const numbers = [1, 2, 3, 4, 5];
// console.log(numbersString); // '1-2-3-4-5'

// 20. Найти минимальное и максимальное число
// Описание: Определите минимальное и максимальное число в массиве.
// const numbers = [5, 3, 9, 1, 6, 8];
// console.log(min); // 1
// console.log(max); // 9

// 21. Найти все четные числа
// Описание: Оставьте в массиве только четные числа.
// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// console.log(evenNumbers); // [2, 4, 6, 8, 10]

// 22.  Обратный порядок массива
// Описание: Разверните массив в обратном порядке.
// const numbers = [1, 2, 3, 4, 5];
// console.log(reversed); // [5, 4, 3, 2, 1]

// 23. Умножить все числа на индекс
// Описание: Умножьте каждый элемент массива на его индекс.
// const numbers = [10, 20, 30, 40];
// console.log(multipliedByIndex); // [0, 20, 60, 120]

// 24. Проверка, все ли числа положительные
// Описание: Убедитесь, что все числа в массиве положительные.
// const numbers = [1, 2, 3, 4, -5];
// console.log(allPositive); // false

// 25. Удалить элементы по значению
// Описание: Удалите из массива все элементы со значением “null”.
// const data = [1, null, 2, 3, null, 4];
// console.log(filteredData); // [1, 2, 3, 4]
